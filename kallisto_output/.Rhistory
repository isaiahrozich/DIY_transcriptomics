# load packages----
library(rhdf5) #provides functions for handling hdf5 file formats (kallisto outputs bootstraps in this format)
library(tidyverse) # provides access to Hadley Wickham's collection of R packages for data science, which we will use throughout the course
library(tximport) # package for getting Kallisto results into R
library(ensembldb) #helps deal with ensembl
library(EnsDb.Hsapiens.v86) #replace with your organism-specific database package
library(beepr) #just for fun
# read in your study design ----
#there are LOTS of ways to read data into R, but the readr package (from tidyverse) is one of the simplest
targets <- read_tsv("studydesign.txt")
# you can easily create file paths to the abundance files generated by Kallisto using the 'file.path' function
path <- file.path(targets$sample, "abundance.tsv") # set file paths to your mapped data
# now check to make sure this path is correct by seeing if the files exist
all(file.exists(path))
path
# get annotations using organism-specific package ----
Tx <- transcripts(EnsDb.Hsapiens.v86, columns=c("tx_id", "gene_name"))
Tx <- as_tibble(Tx)
#need to change first column name to 'target_id'
Tx <- dplyr::rename(Tx, target_id = tx_id)
#transcrip ID needs to be the first column in the dataframe
Tx <- dplyr::select(Tx, "target_id", "gene_name")
View(Tx)
# import Kallisto transcript counts into R using Tximport ----
# copy the abundance files to the working directory and rename so that each sample has a unique name
Txi_gene <- tximport(path,
type = "kallisto",
tx2gene = Tx,
txOut = FALSE, #How does the result change if this =FALSE vs =TRUE?
countsFromAbundance = "lengthScaledTPM",
ignoreTxVersion = TRUE)
Txi_gene
# OPTIONAL: get annotations using BiomaRt----
# The annotation method described in the code chunk above works great if an organism-specific data base package exists for your organisms of interest
# however, this is only the case for human, mouse and rat....
# so, this optional code chunk shows one way you can get annotation data for other target organisms
# in this example, we're retrieving 1:1 mappings between transcript identifiers and gene symbols for the domesticated dog (Canis familiaris)
library(biomaRt) # an alternative for annotation
listMarts() #default host is ensembl.org, and most current release of mammalian genomes
#choose the 'mart' you want to work with
myMart <- useMart(biomart="ENSEMBL_MART_ENSEMBL")
View(myMart)
#take a look at all available datasets within the selected mart
available.datasets <- listDatasets(myMart)
available.datasets
View(available.datasets)
ferret.anno <- useMart(biomart = "ENSEMBL_MART_ENSEMBL", dataset = "mpfuro_gene_ensembl")
ferret.attributes <- listAttributes(ferret.anno)
View(ferret.attributes)
Tx.ferret <- getBM(attributes=c('ensembl_transcript_id_version',
'external_gene_name'),
mart = ferret.anno)
View(Tx.ferret)
Tx.ferret <- getBM(attributes=c('ensembl_transcript_id_version',
'external_gene_name',
'start_position',
'end_position',
'entrezgene_id',
'description',
'pfam'),
mart = ferret.anno)
View(Tx.ferret)
##task 2
?getSequence
Tx.ferret <- getBM(attributes=c('ensembl_transcript_id_version',
'external_gene_name',
'start_position',
'end_position',
'entrezgene_id',
'description',
'pfam',
'chromosome_name'),
mart = ferret.anno)
ifit2 <- getSequence(chomosome = "GL897268.1", start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, chomosome = "GL897268.1", start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(chomosome = "GL897268.1", start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'cdna', start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'cdna', chromosome = 'GL897268.1', start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'coding_gene_flank', chromosome = 'GL897268.1', start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'gene_flank', chromosome = 'GL897268.1', start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'gene_flank', chromosome = 'GL897268.1', start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'gene_flank', type = 'ENSMPUT00000006545.1', chromosome = 'GL897268.1', start = 109033, end = 115170, id = "IFIT2", upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'gene_flank', type = 'ENSMPUT00000006545.1', chromosome = 'GL897268.1', start = 109033, end = 115170, upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'gene_flank', type = 'ensembl', chromosome = 'GL897268.1', start = 109033, end = 115170, upstream = 1000)
ifit2 <- getSequence(mart = ferret.anno, seqType = 'gene_flank', type = 'ensembl_gene_id', chromosome = 'GL897268.1', start = 109033, end = 115170, upstream = 1000)
View(ifit2)
View(ifit2)
Tx.ferret <- getBM(attributes=c('ensembl_transcript_id_version',
'external_gene_name',
'start_position',
'end_position',
'entrezgene_id',
'description',
'pfam',
'chromosome_name',
'ensembl_gene_id'_),
Tx.ferret <- getBM(attributes=c('ensembl_transcript_id_version',
'external_gene_name',
'start_position',
'end_position',
'entrezgene_id',
'description',
'pfam',
'chromosome_name',
'ensembl_gene_id'),
mart = ferret.anno)
oas2 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896936.1',
start = 6756623,
end = 6777562,
upstream = 1000)
View(oas2)
##etc.
seq <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
id = c("IFIT2", "OAS2", "IRF1", "IFNAR1", "MX1"),
upstream = 1000)
View(seq)
##etc.
seq <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'hgnc_symbol',
id = c("IFIT2", "OAS2", "IRF1", "IFNAR1", "MX1"),
upstream = 1000)
View(seq)
View(seq)
mx1 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896984.1',
start = 5070379,
end = 5099577,
upstream = 1000)
mx1 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896984.1',
start = 5070379,
end = 5099577,
upstream = 1000)
oas2 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896936.1',
start = 6756623,
end = 6777562,
upstream = 1000)
##etc.
seq <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'hgnc_symbol',
id = c("IFIT2", "OAS2", "IRF1", "IFNAR1", "MX1"),
upstream = 1000)
mx1 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896984.1',
start = 5070379,
end = 5099577,
upstream = 1000)
View(seq)
oas2 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896936.1',
start = 6756623,
end = 6777562,
upstream = 1000)
View(oas2)
View(seq)
mx1 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896984.1',
start = 5070379,
end = 5099577,
upstream = 1000)
mx1 <- getSequence(mart = ferret.anno,
seqType = 'gene_flank',
type = 'ensembl_gene_id',
chromosome = 'GL896984.1',
start = 5070379,
end = 5099577,
upstream = 1000)
View(mx1)
